<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABDJJREFUaEPt
        mEtrG1cYhv0T8hOySaxl6DZGlgTprqTLbAKlXgeyahUlUEEKvcUQSEtvcpR64jaUQGwS2joXLFpDncTR
        SIrlsS0lkm+SrZE0sgNdFJKv5505UwvpjDRHuHia6IVnoTlnPj+v51iyPdBPP/30Y6ZcLh/e3NyMb5RK
        MwcBvjYcuE5vKbABxdU1o7i2Tq0UVtdoaSVHy7kc5Z8X2tbdgnsxA7MwU7QHDnDhWvLJPStE8YVELCxq
        ZBiGSf7Zc8oxRPs6Yd7DsOdgpmgfgAvXko+2kkssreTZd6udRW35X4FicZWy7LVoXydwD+6152CmaB+A
        C9eSTyarJRgkYl5N45FTqVSmZDoj3OMG3IsZmIWZoj2c3os8VjOJ+VSGnJibT9Lc4yfCNRkwA7NEazZw
        4Vryufbrk/kPx1XyAnDhWnLxRdJR3/k0eQrmxPXcxRdWDwsHeQHmxjW7x3fhaUA4xAswN67ZPa9NkSOR
        7DHhEA8AN67pLqIhXoDruc/gObXhi6TYO4V3gBPXcx/fOTUhGnagMCeu5z6DEXVSOKyJtz5K0Wc/L9Lk
        gyWa/XPF5Mffluj9r58K97cywvZduaXRydGMcL0VOHE99/FF1KhomM3bn2bo7u/LpvwUKzJ2RzOxC6Gg
        031Ys+8FbovAieu5DzuPZ8XDLGzpz5kUnox9fejjNN3jkq2CP03vPTnscdrnBJy4nvuwT9CAaBiArC3U
        XMImOpE111Cy+TqufcmOEo4UXtvfDNdPhDlxPfc5ElGPCYcxUOSDH7J0JrYgXMd1CEK0+XpradkicOJ6
        chENc4P9RFBWtG4jW4RryedoONlg5xJn0zUnR61jh/N//KJ5rh3ZK5IWrjcDF64ln8GwmmBQN8ZuaxRj
        4K0XYngXO/EJkxPsbQb3mUUudd/L6P0PK3+sOjEcN9TheN3iak3zj1ULFpWCP6avD323baxuVF7l1vSX
        C0X95aN8laYXdDp9o0zHvyk5MvR9yUho1b9L27VXX9wv/eWPldf9Y1tsbtlkOL6lDV+rqBbbqv/q1gTX
        kk9wfDcRUnYppOwIaLQxMmXQtw+tfyRsVAzzdUhhXK8LqNEf+bq598KDmvnaoipAp6Ci9/5EgsqOKlPE
        Yq/MtOaRIlYJ+SJnftl7KvtVBHAt+TgVGZlqMAmDrich+j8vAgHwzo3WMv/N0eq5SCBOh5yKgFn2RCCR
        LBoUvmuVQanRWetJYA1P5uCLKC8CnYpA2i4j4uIML7GPRQKKLv+7Vrci9lEK37N+VlAK4FidutlUokOR
        6EyNvpqr0+lJDxRpp6VEhyJi9r3I7ruvRREmG/VakZCiy/+FyGT7RbxVZHznrOeKTFTf43rugw/EoLKb
        8kqRoFJJcTX5WJ/uLy4HxxuJdgz3KHUBVQf0NkJK9XIgbhziWv3008+bm4GBfwB8lVk8dcozvgAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>